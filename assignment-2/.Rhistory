knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(sf)
library(tigris)
library(leaflet)
library(censusapi)
library(tidyverse)
census_api_key("c92c3c586ec2640e86f9d2e8d8b09b5a75f4ea16")
library(sf)
library(tigris)
library(leaflet)
library(censusapi)
library(tidyverse)
Sys.setenv(CENSUS_KEY="c92c3c586ec2640e86f9d2e8d8b09b5a75f4ea16")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(sf)
library(tigris)
library(leaflet)
library(censusapi)
library(tidyverse)
Sys.setenv(CENSUS_KEY="c92c3c586ec2640e86f9d2e8d8b09b5a75f4ea16")
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
View(bay_pdas)
View(smc_blockgroups)
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F)
View(smc_blockgroups)
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
st_crs(bay_pdas)
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = bay_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_blockgroups,
color = "red",
weight = 0.75,
fill = F
)
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_pdas <-
bay_pdas %>%
filter(county == "San Mateo")
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
smc_cbg_pop <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "block group:*",
regionin = "state:06+county:081",
vars = "B01001_001E"
)
View(smc_cbg_pop)
smc_cbg_pop <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "block group:*",
regionin = "state:06+county:081",
vars = "B01001_001E"
) %>%
transmute(
cbg =
paste0(state,county,tract,block_group),
pop = B01001_001E
)
smc_cbg_pop <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "block group:*",
regionin = "state:06+county:081",
vars = "B01001_001E"
) %>%
transmute(
cbg =
paste0(state,county,tract,block_group),
pop = B01001_001E
) %>%
left_join(
smc_blockgroups %>%
select(GEOID),
by = c("cbg" = "GEOID")
) %>%
st_as_sf()
View(smc_cbg_pop)
View(smc_pdas)
smc_pda_pop1 <-
smc_cbg_pop[smc_pdas, ]
View(smc_pda_pop1)
sum(smc_pda_pop1$pop)
sum(smc_pda_pop$pop)
sum(smc_cbg_pop$pop)
sum(smc_pda_pop$pop)
sum(smc_pda_pop1$pop)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_pda_pop1,
color = "red",
weight = 0.75,
fill = F
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_cbg_pop,
color = "red",
weight = 0.75,
fill = F
)
pda_pop1
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_pda_pop1,
color = "red",
weight = 0.75,
fill = F
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_pda_pop1,
color = "red",
weight = 0.75,
fill = F
)
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_pdas <-
bay_pdas %>%
filter(county == "San Mateo")
#no population data
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
#has pop data
smc_cbg_pop <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "block group:*",
regionin = "state:06+county:081",
vars = "B01001_001E"
) %>%
transmute(
cbg =
paste0(state,county,tract,block_group),
pop = B01001_001E
) %>%
left_join(
smc_blockgroups %>%
select(GEOID),
by = c("cbg" = "GEOID")
) %>%
st_as_sf()
#get only census block groups which overlap with pdas
smc_pda_pop1 <-
smc_cbg_pop[smc_pdas, ]
#get only cbgs where centroid is in pdas
smc_pda_pop2 <-
smc_cbg_pop %>%
st_centroid() %>%
.[smc_pdas, ]
sum(smc_pda_pop1$pop)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_pda_pop2,
color = "red",
weight = 0.75,
fill = F
)
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_pdas <-
bay_pdas %>%
filter(county == "San Mateo")
#no population data
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
#has pop data
smc_cbg_pop <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "block group:*",
regionin = "state:06+county:081",
vars = "B01001_001E"
) %>%
transmute(
cbg =
paste0(state,county,tract,block_group),
pop = B01001_001E
) %>%
left_join(
smc_blockgroups %>%
select(GEOID),
by = c("cbg" = "GEOID")
) %>%
st_as_sf()
#get only census block groups which overlap with pdas
smc_pda_pop1 <-
smc_cbg_pop[smc_pdas, ]
#get only cbgs where centroid is in pdas
smc_pda_pop2 <-
smc_cbg_pop %>%
st_centroid() %>%
.[smc_pdas, ] %>%
st_as_sf()
sum(smc_pda_pop1$pop)
View(smc_pda_pop2)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_pda_pop2,
color = "red",
weight = 0.75,
fill = F
)
bay_pdas <- st_read("https://opendata.arcgis.com/datasets/36dd7a36576f42d4a3d6b0708e3982f4_0.geojson")
smc_pdas <-
bay_pdas %>%
filter(county == "San Mateo")
#no population data
smc_blockgroups <-
block_groups("CA", "San Mateo", cb = T, progress_bar = F) %>%
st_transform(st_crs(bay_pdas))
#has pop data
smc_cbg_pop <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "block group:*",
regionin = "state:06+county:081",
vars = "B01001_001E"
) %>%
transmute(
cbg =
paste0(state,county,tract,block_group),
pop = B01001_001E
) %>%
left_join(
smc_blockgroups %>%
select(GEOID),
by = c("cbg" = "GEOID")
) %>%
st_as_sf()
#get only census block groups which overlap with pdas
smc_pda_pop1 <-
smc_cbg_pop[smc_pdas, ]
#get only cbgs where centroid is in pdas
smc_pda_pop2 <-
smc_cbg_pop %>%
st_centroid() %>%
.[smc_pdas, ] %>%
st_set_geometry(NULL) %>%
left_join(smc_cbg_pop %>% select(cbg)) %>%
st_as_sf()
sum(smc_pda_pop1$pop)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_pda_pop2,
color = "red",
weight = 0.75,
fill = F
)
sum(smc_pda_pop2$pop)
sum(smc_pda_pop1$pop)
smc_cbg_pop_area <-
smc_cbg_pop %>%
st_transform(26910) %>%
mutate(area = st_area(.))
View(smc_cbg_pop_area)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_cbg_pop_intersection %>%
st_transform(4326),
color = "red",
weight = 0.75,
fill = F
)
smc_cbg_pop_area <-
smc_cbg_pop %>%
st_transform(26910) %>%
mutate(area = st_area(.))
smc_cbg_pop_intersection <-
smc_cbg_pop_area %>%
st_intersection(
smc_pdas %>%
st_transform(26910)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_cbg_pop_intersection %>%
st_transform(4326),
color = "red",
weight = 0.75,
fill = F
)
smc_cbg_pop_area <-
smc_cbg_pop %>%
st_transform(26910) %>%
mutate(area = st_area(.))
smc_cbg_pop_intersection <-
smc_cbg_pop_area %>%
st_intersection(
smc_pdas %>%
st_transform(26910)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = smc_pdas,
stroke = F,
fillOpacity = 0.5
) %>%
addPolygons(
data = smc_cbg_pop_intersection %>%
st_transform(4326),
color = "red",
weight = 0.75,
fill = F
)
smc_pda_pop3 <-
smc_cbg_pop %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
smc_pdas %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = leftover_area / original_area,
pop = pop * perc_area
)
sum(smc_pda_pop3$pop) %>% round()
setwd("~/GitHub/eshi2000.github.io/assignment-2")
